---

# configure carbon

- name: write config files
  template:
    src: "{{ item.src }}"
    dest: "{{ carbon_confdir }}/{{ item.dest }}"
  loop:
    - { src: 'templates/carbon/carbon.conf.j2', dest: 'carbon.conf' }
    - { src: 'templates/carbon/storage-schemas.conf.j2', dest: 'storage-schemas.conf' }
    - { src: 'templates/carbon/storage-aggregation.conf.j2', dest: 'storage-aggregation.conf' }
  notify:
    - 'restart carbon cache'

      #- name: enable carbon service
      #  service:
      #    name: "{{ carbon_service }}"
      #    enabled: yes
      #  notify:
      #    - 'restart carbon cache'

- name: write graphite-web configuration
  template:
    src: "templates/graphite-web/local_settings.py.j2"
    dest: "{{ graphite_web_confdir }}/local_settings.py"

- name: write graphite-web apache configuration
  template:
    src: "templates/graphite-web/graphite-web.conf.j2"
    dest: "/etc/httpd/conf.d/graphite-web.conf"

- name: initialize database
  command: "/opt/rh/rh-python36/root/usr/bin/django-admin.py migrate --settings=graphite.settings --run-syncdb"
  environment:
    PYTHONPATH: "/opt/graphite/webapp"
  register: graphite_register_db_init
  changed_when: graphite_register_db_init.stdout is not search("No migrations to apply")

- name: collect static files
  command: "/opt/rh/rh-python36/root/usr/bin/django-admin.py collectstatic --settings=graphite.settings"
  environment:
    PYTHONPATH: "/opt/graphite/webapp"
  args:
    creates: "{{ graphite_web_staticdir }}"
  register: graphite_register_static_generated

- name: configure mod-wsgi with python3
  shell: "/opt/rh/rh-python36/root/usr/bin/mod_wsgi-express install-module > /etc/httpd/conf.modules.d/02-wsgi.conf"
  args:
    creates: "/etc/httpd/conf.modules.d/02-wsgi.conf"
